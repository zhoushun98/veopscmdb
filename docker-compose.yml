version: "3"

services:

  cmdb-cache:
    container_name: cmdb-cache
    image: registry.cn-hangzhou.aliyuncs.com/zhoushun/redis:6.2.14
    restart: always
    environment:
      TZ: Asia/Shanghai
    networks:
      new:
        aliases:
        - redis
    ports:
    - 6379:6379
    volumes:
    - cache-data:/data

  cmdb-db:
    container_name: cmdb-db
    image: registry.cn-hangzhou.aliyuncs.com/zhoushun/mysql:5.7.43
    restart: always
    environment:
      MYSQL_DATABASE: cmdb
      MYSQL_PASSWORD: "123456"
      MYSQL_ROOT_PASSWORD: "123456"
      MYSQL_USER: cmdb
      TZ: Asia/Shanghai
    networks:
      new:
        aliases:
        - mysql
    ports:
    - 3306:3306
    volumes:
    - db-data:/bitnami/mysql/data
    - ./mysql/cnf/my_custom.cnf:/opt/bitnami/mysql/conf/my_custom.cnf:ro
    - ./mysql/sql/cmdb_base.sql:/docker-entrypoint-initdb.d/cmdb.sql:ro

  cmdb-api:
    container_name: cmdb-api
    image: zhoushun98/cmdb-api:2.3.12
    environment:
      TZ: Asia/Shanghai
      WAIT_HOSTS: cmdb-db:3306, cmdb-cache:6379
    command:
    - /bin/sh
    - -c
    - |-
      sed -i "s#USE_ACL = False#USE_ACL = True#g" settings.py
      /wait
      flask db-setup
      flask common-check-new-columns
      gunicorn --workers=4 autoapp:app -b 0.0.0.0:5000 -D

      celery -A celery_worker.celery worker -E -Q one_cmdb_async --autoscale=4,1 --logfile=one_cmdb_async.log -D
      celery -A celery_worker.celery worker -E -Q acl_async --logfile=one_acl_async.log --autoscale=2,1 -D

      nohup flask cmdb-trigger > trigger.log 2>&1 &
      flask cmdb-init-cache
      flask cmdb-init-acl > /dev/null 2>&1
      flask cmdb-counter > counter.log 2>&1
    depends_on:
      cmdb-cache:
        condition: service_started
        required: true
      cmdb-db:
        condition: service_started
        required: true
    networks:
      new:
        aliases:
        - cmdb-api

  cmdb-ui:
    container_name: cmdb-ui
    image: zhoushun98/cmdb-ui:2.3.12
    depends_on:
      cmdb-api:
        condition: service_started
        required: true
    networks:
      new: null
    ports:
    - 80:80
    volumes:
    - ./nginx/cmdb.conf:/etc/nginx/conf.d/default.conf:ro

networks:
  new:
    name: cmdb_network
    driver: bridge

volumes:
  cache-data:
    name: cmdb_cache-data
    driver: local
  db-data:
    name: cmdb_db-data
    driver: local
